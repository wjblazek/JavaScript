1.  ## Count the number of links in a linked listed created from an array A.  A link of -1 ends the list.

// you can write to stdout for debugging purposes, e.g.
// console.log('this is a debug message');

function solution(A) {
    // write your code in JavaScript (Node.js 6.4.0)
    var i=0;
    var count=1;
    var nextIndex=0;
    
    while (A[nextIndex] != -1) {
        nextIndex = A[nextIndex];
        count++
        console.log("A[nextIndex]=" + A[nextIndex] );
        i++;
    }
    
    console.log("count=" + count);
    return count;
}

--------------------------
2.  ## Count the words in each sentence and return the count of words in the longest sentence.

// you can write to stdout for debugging purposes, e.g.
// console.log('this is a debug message');

function solution(S) {
    // write your code in JavaScript (Node.js 6.4.0)
    var i=0;
    var longestSentence=0;
    var sentenceWordCount=0;
    var longestSentenceWordCount=0;
    
    for (i=0; S[i] != null; i++) {
        console.log("S[" + i + "]=" + S[i] + ", sentenceWordCount=" + sentenceWordCount + ", longestSentenceWordCount=" + longestSentenceWordCount);
        
        // delimiting "words" by spaces or end of sentence only, not special chars, etc. 
        if ((S[i] == " ") || (S[i] == ".") || (S[i] == "?") || (S[i] == "!")){
                sentenceWordCount++;
        }
        
        // delimiting sentences by ".", "?" and "!" only.
        if ((S[i] == ".") || (S[i] == "?") || (S[i] == "!")) {
            if ( sentenceWordCount > longestSentenceWordCount ) {
                longestSentenceWordCount = sentenceWordCount;
                console.log("longestSentenceWordCount=" + longestSentenceWordCount);
                sentenceWordCount = 0;
            }
        }
    }
    
    console.log("longestSentenceWordCount=" + longestSentenceWordCount);
    return longestSentenceWordCount;
}

--------------------
3. Find the bug:   Probably in handling the largest index up to 1,000,000,000.

function solution(X, Y, A) {
    var N = A.length;
    var result = -1;
    var nX = 0;
    var nY = 0;
    for (var i = 0; i < N; i++) {
        if (A[i] == X)
            nX += 1;
        else if (A[i] == Y)
            nY += 1;
        if (nX == nY)
            result = i;
    }
    return result;
}
